// Generated from r\SQLGrammer.g4 by ANTLR 4.5.3
package com.jason798.hbase.antlr;

import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.ATN;
import org.antlr.v4.runtime.atn.ATNDeserializer;
import org.antlr.v4.runtime.atn.LexerATNSimulator;
import org.antlr.v4.runtime.atn.PredictionContextCache;
import org.antlr.v4.runtime.dfa.DFA;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class SQLGrammerLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5.3", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, SELECT=3, UPDATE=4, DELETE=5, FROM=6, WHERE=7, STAR=8, 
		LB=9, RB=10, SET=11, ROWKEY=12, STARTKEY=13, ENDKEY=14, MAXVERSION=15, 
		LIMIT=16, TS=17, STARTTS=18, ENDTS=19, IS=20, NULL=21, NOT=22, AND=23, 
		OR=24, EQ=25, LESSEQUAL=26, LESS=27, GREATEREQUAL=28, GREATER=29, NOTEQUAL=30, 
		EQUAL=31, NOTMATCH=32, MATCH=33, IN=34, NOTIN=35, BETWEEN=36, NOTBETWEEN=37, 
		ISNULL=38, ISNOTNULL=39, ISMISSING=40, ISNOTMISSING=41, Double_Quote=42, 
		Quote=43, Underscore=44, Period=45, POSITIVE=46, NATURAL=47, Regular_Identifier=48, 
		Data_Value=49, WS=50;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "SELECT", "UPDATE", "DELETE", "FROM", "WHERE", "STAR", 
		"LB", "RB", "SET", "ROWKEY", "STARTKEY", "ENDKEY", "MAXVERSION", "LIMIT", 
		"TS", "STARTTS", "ENDTS", "IS", "NULL", "NOT", "AND", "OR", "EQ", "LESSEQUAL", 
		"LESS", "GREATEREQUAL", "GREATER", "NOTEQUAL", "EQUAL", "NOTMATCH", "MATCH", 
		"IN", "NOTIN", "BETWEEN", "NOTBETWEEN", "ISNULL", "ISNOTNULL", "ISMISSING", 
		"ISNOTMISSING", "Double_Quote", "Quote", "Underscore", "Period", "POSITIVE", 
		"NATURAL", "Regular_Identifier", "Data_Value", "DoubleQuote_Symbol", "Identifier_Body", 
		"Identifier_Part", "Simple_Latin_Letter", "Identifier_Start", "Identifier_Extend", 
		"ESC", "Digit", "Simple_Latin_Upper_Case_Letter", "Simple_Latin_Lower_Case_Letter", 
		"Delimited_Identifier_Body", "Delimited_Identifier_Part", "NonDoubleQuote_Character", 
		"Unicode_Character_Without_Quotes", "Basic_Latin_Without_Quotes", "Extended_Latin_Without_Quotes", 
		"WS"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "','", "'#'", null, null, null, null, null, "'*'", "'('", "')'", 
		null, null, null, null, "'maxversion'", null, null, null, null, null, 
		null, null, null, null, "'='", "'lessequal'", "'less'", "'greaterequal'", 
		"'greater'", "'notequal'", "'equal'", "'notmatch'", "'match'", "'in'", 
		"'notin'", "'between'", "'notbetween'", "'isnull'", "'isnotnull'", "'ismissing'", 
		"'isnotmissing'", "'\"'", "'''", "'_'", "'.'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, "SELECT", "UPDATE", "DELETE", "FROM", "WHERE", "STAR", 
		"LB", "RB", "SET", "ROWKEY", "STARTKEY", "ENDKEY", "MAXVERSION", "LIMIT", 
		"TS", "STARTTS", "ENDTS", "IS", "NULL", "NOT", "AND", "OR", "EQ", "LESSEQUAL", 
		"LESS", "GREATEREQUAL", "GREATER", "NOTEQUAL", "EQUAL", "NOTMATCH", "MATCH", 
		"IN", "NOTIN", "BETWEEN", "NOTBETWEEN", "ISNULL", "ISNOTNULL", "ISMISSING", 
		"ISNOTMISSING", "Double_Quote", "Quote", "Underscore", "Period", "POSITIVE", 
		"NATURAL", "Regular_Identifier", "Data_Value", "WS"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public SQLGrammerLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "SQLGrammer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\64\u024f\b\1\4\2"+
		"\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4"+
		"\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22"+
		"\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31"+
		"\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t"+
		" \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t"+
		"+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64"+
		"\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t"+
		"=\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3\4"+
		"\3\4\3\4\3\4\3\4\3\4\3\4\3\4\3\4\5\4\u0098\n\4\3\5\3\5\3\5\3\5\3\5\3\5"+
		"\3\5\3\5\3\5\3\5\3\5\3\5\5\5\u00a6\n\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6"+
		"\3\6\3\6\3\6\3\6\5\6\u00b4\n\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\5\7\u00be"+
		"\n\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\5\b\u00ca\n\b\3\t\3\t\3\n"+
		"\3\n\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\5\f\u00d8\n\f\3\r\3\r\3\r\3\r\3"+
		"\r\3\r\3\r\3\r\3\r\3\r\3\r\3\r\5\r\u00e6\n\r\3\16\3\16\3\16\3\16\3\16"+
		"\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\5\16\u00f8\n\16"+
		"\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\5\17\u0106"+
		"\n\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3\21\3\21"+
		"\3\21\3\21\3\21\3\21\3\21\3\21\3\21\5\21\u011c\n\21\3\22\3\22\3\22\3\22"+
		"\5\22\u0122\n\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23"+
		"\3\23\3\23\3\23\5\23\u0132\n\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\24"+
		"\3\24\3\24\5\24\u013e\n\24\3\25\3\25\3\25\3\25\5\25\u0144\n\25\3\26\3"+
		"\26\3\26\3\26\3\26\3\26\3\26\3\26\5\26\u014e\n\26\3\27\3\27\3\27\3\27"+
		"\3\27\3\27\5\27\u0156\n\27\3\30\3\30\3\30\3\30\3\30\3\30\5\30\u015e\n"+
		"\30\3\31\3\31\3\31\3\31\5\31\u0164\n\31\3\32\3\32\3\33\3\33\3\33\3\33"+
		"\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35"+
		"\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36"+
		"\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3 \3"+
		" \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3#\3"+
		"#\3#\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3&\3&\3"+
		"&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3"+
		")\3)\3)\3)\3)\3)\3)\3)\3)\3)\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3"+
		"+\3+\3,\3,\3-\3-\3.\3.\3/\6/\u01f7\n/\r/\16/\u01f8\3/\7/\u01fc\n/\f/\16"+
		"/\u01ff\13/\3\60\6\60\u0202\n\60\r\60\16\60\u0203\3\61\3\61\3\62\3\62"+
		"\3\62\7\62\u020b\n\62\f\62\16\62\u020e\13\62\3\62\3\62\3\63\3\63\3\63"+
		"\3\64\3\64\7\64\u0217\n\64\f\64\16\64\u021a\13\64\3\65\3\65\5\65\u021e"+
		"\n\65\3\66\3\66\5\66\u0222\n\66\3\67\3\67\5\67\u0226\n\67\38\38\38\58"+
		"\u022b\n8\39\39\39\39\59\u0231\n9\3:\3:\3;\3;\3<\3<\3=\3=\3>\3>\5>\u023d"+
		"\n>\3?\3?\3@\3@\5@\u0243\n@\3A\3A\3B\3B\3C\6C\u024a\nC\rC\16C\u024b\3"+
		"C\3C\3\u020c\2D\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31"+
		"\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65"+
		"\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\2"+
		"g\2i\2k\2m\2o\2q\2s\2u\2w\2y\2{\2}\2\177\2\u0081\2\u0083\2\u0085\64\3"+
		"\2\t\3\2\63;\3\2\62;\3\2C\\\3\2c|\5\2\"#%(*\u0080\5\2\3#%(*\u0101\5\2"+
		"\13\f\17\17\"\"\u025f\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2"+
		"\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25"+
		"\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2"+
		"\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2"+
		"\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3"+
		"\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2"+
		"\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2"+
		"Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3"+
		"\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2\u0085\3\2\2\2\3\u0087\3\2\2"+
		"\2\5\u0089\3\2\2\2\7\u0097\3\2\2\2\t\u00a5\3\2\2\2\13\u00b3\3\2\2\2\r"+
		"\u00bd\3\2\2\2\17\u00c9\3\2\2\2\21\u00cb\3\2\2\2\23\u00cd\3\2\2\2\25\u00cf"+
		"\3\2\2\2\27\u00d7\3\2\2\2\31\u00e5\3\2\2\2\33\u00f7\3\2\2\2\35\u0105\3"+
		"\2\2\2\37\u0107\3\2\2\2!\u0112\3\2\2\2#\u0121\3\2\2\2%\u0131\3\2\2\2\'"+
		"\u013d\3\2\2\2)\u0143\3\2\2\2+\u014d\3\2\2\2-\u0155\3\2\2\2/\u015d\3\2"+
		"\2\2\61\u0163\3\2\2\2\63\u0165\3\2\2\2\65\u0167\3\2\2\2\67\u0171\3\2\2"+
		"\29\u0176\3\2\2\2;\u0183\3\2\2\2=\u018b\3\2\2\2?\u0194\3\2\2\2A\u019a"+
		"\3\2\2\2C\u01a3\3\2\2\2E\u01a9\3\2\2\2G\u01ac\3\2\2\2I\u01b2\3\2\2\2K"+
		"\u01ba\3\2\2\2M\u01c5\3\2\2\2O\u01cc\3\2\2\2Q\u01d6\3\2\2\2S\u01e0\3\2"+
		"\2\2U\u01ed\3\2\2\2W\u01ef\3\2\2\2Y\u01f1\3\2\2\2[\u01f3\3\2\2\2]\u01f6"+
		"\3\2\2\2_\u0201\3\2\2\2a\u0205\3\2\2\2c\u0207\3\2\2\2e\u0211\3\2\2\2g"+
		"\u0214\3\2\2\2i\u021d\3\2\2\2k\u0221\3\2\2\2m\u0225\3\2\2\2o\u022a\3\2"+
		"\2\2q\u0230\3\2\2\2s\u0232\3\2\2\2u\u0234\3\2\2\2w\u0236\3\2\2\2y\u0238"+
		"\3\2\2\2{\u023c\3\2\2\2}\u023e\3\2\2\2\177\u0242\3\2\2\2\u0081\u0244\3"+
		"\2\2\2\u0083\u0246\3\2\2\2\u0085\u0249\3\2\2\2\u0087\u0088\7.\2\2\u0088"+
		"\4\3\2\2\2\u0089\u008a\7%\2\2\u008a\6\3\2\2\2\u008b\u008c\7u\2\2\u008c"+
		"\u008d\7g\2\2\u008d\u008e\7n\2\2\u008e\u008f\7g\2\2\u008f\u0090\7e\2\2"+
		"\u0090\u0098\7v\2\2\u0091\u0092\7U\2\2\u0092\u0093\7G\2\2\u0093\u0094"+
		"\7N\2\2\u0094\u0095\7G\2\2\u0095\u0096\7E\2\2\u0096\u0098\7V\2\2\u0097"+
		"\u008b\3\2\2\2\u0097\u0091\3\2\2\2\u0098\b\3\2\2\2\u0099\u009a\7w\2\2"+
		"\u009a\u009b\7r\2\2\u009b\u009c\7f\2\2\u009c\u009d\7c\2\2\u009d\u009e"+
		"\7v\2\2\u009e\u00a6\7g\2\2\u009f\u00a0\7W\2\2\u00a0\u00a1\7R\2\2\u00a1"+
		"\u00a2\7F\2\2\u00a2\u00a3\7C\2\2\u00a3\u00a4\7V\2\2\u00a4\u00a6\7G\2\2"+
		"\u00a5\u0099\3\2\2\2\u00a5\u009f\3\2\2\2\u00a6\n\3\2\2\2\u00a7\u00a8\7"+
		"f\2\2\u00a8\u00a9\7g\2\2\u00a9\u00aa\7n\2\2\u00aa\u00ab\7g\2\2\u00ab\u00ac"+
		"\7v\2\2\u00ac\u00b4\7g\2\2\u00ad\u00ae\7F\2\2\u00ae\u00af\7G\2\2\u00af"+
		"\u00b0\7N\2\2\u00b0\u00b1\7G\2\2\u00b1\u00b2\7V\2\2\u00b2\u00b4\7G\2\2"+
		"\u00b3\u00a7\3\2\2\2\u00b3\u00ad\3\2\2\2\u00b4\f\3\2\2\2\u00b5\u00b6\7"+
		"h\2\2\u00b6\u00b7\7t\2\2\u00b7\u00b8\7q\2\2\u00b8\u00be\7o\2\2\u00b9\u00ba"+
		"\7H\2\2\u00ba\u00bb\7T\2\2\u00bb\u00bc\7Q\2\2\u00bc\u00be\7O\2\2\u00bd"+
		"\u00b5\3\2\2\2\u00bd\u00b9\3\2\2\2\u00be\16\3\2\2\2\u00bf\u00c0\7y\2\2"+
		"\u00c0\u00c1\7j\2\2\u00c1\u00c2\7g\2\2\u00c2\u00c3\7t\2\2\u00c3\u00ca"+
		"\7g\2\2\u00c4\u00c5\7Y\2\2\u00c5\u00c6\7J\2\2\u00c6\u00c7\7G\2\2\u00c7"+
		"\u00c8\7T\2\2\u00c8\u00ca\7G\2\2\u00c9\u00bf\3\2\2\2\u00c9\u00c4\3\2\2"+
		"\2\u00ca\20\3\2\2\2\u00cb\u00cc\7,\2\2\u00cc\22\3\2\2\2\u00cd\u00ce\7"+
		"*\2\2\u00ce\24\3\2\2\2\u00cf\u00d0\7+\2\2\u00d0\26\3\2\2\2\u00d1\u00d2"+
		"\7u\2\2\u00d2\u00d3\7g\2\2\u00d3\u00d8\7v\2\2\u00d4\u00d5\7U\2\2\u00d5"+
		"\u00d6\7G\2\2\u00d6\u00d8\7V\2\2\u00d7\u00d1\3\2\2\2\u00d7\u00d4\3\2\2"+
		"\2\u00d8\30\3\2\2\2\u00d9\u00da\7t\2\2\u00da\u00db\7q\2\2\u00db\u00dc"+
		"\7y\2\2\u00dc\u00dd\7m\2\2\u00dd\u00de\7g\2\2\u00de\u00e6\7{\2\2\u00df"+
		"\u00e0\7T\2\2\u00e0\u00e1\7Q\2\2\u00e1\u00e2\7Y\2\2\u00e2\u00e3\7M\2\2"+
		"\u00e3\u00e4\7G\2\2\u00e4\u00e6\7[\2\2\u00e5\u00d9\3\2\2\2\u00e5\u00df"+
		"\3\2\2\2\u00e6\32\3\2\2\2\u00e7\u00e8\7u\2\2\u00e8\u00e9\7v\2\2\u00e9"+
		"\u00ea\7c\2\2\u00ea\u00eb\7t\2\2\u00eb\u00ec\7v\2\2\u00ec\u00ed\7m\2\2"+
		"\u00ed\u00ee\7g\2\2\u00ee\u00f8\7{\2\2\u00ef\u00f0\7U\2\2\u00f0\u00f1"+
		"\7V\2\2\u00f1\u00f2\7C\2\2\u00f2\u00f3\7T\2\2\u00f3\u00f4\7V\2\2\u00f4"+
		"\u00f5\7M\2\2\u00f5\u00f6\7G\2\2\u00f6\u00f8\7[\2\2\u00f7\u00e7\3\2\2"+
		"\2\u00f7\u00ef\3\2\2\2\u00f8\34\3\2\2\2\u00f9\u00fa\7g\2\2\u00fa\u00fb"+
		"\7p\2\2\u00fb\u00fc\7f\2\2\u00fc\u00fd\7m\2\2\u00fd\u00fe\7g\2\2\u00fe"+
		"\u0106\7{\2\2\u00ff\u0100\7G\2\2\u0100\u0101\7P\2\2\u0101\u0102\7F\2\2"+
		"\u0102\u0103\7M\2\2\u0103\u0104\7G\2\2\u0104\u0106\7[\2\2\u0105\u00f9"+
		"\3\2\2\2\u0105\u00ff\3\2\2\2\u0106\36\3\2\2\2\u0107\u0108\7o\2\2\u0108"+
		"\u0109\7c\2\2\u0109\u010a\7z\2\2\u010a\u010b\7x\2\2\u010b\u010c\7g\2\2"+
		"\u010c\u010d\7t\2\2\u010d\u010e\7u\2\2\u010e\u010f\7k\2\2\u010f\u0110"+
		"\7q\2\2\u0110\u0111\7p\2\2\u0111 \3\2\2\2\u0112\u0113\7n\2\2\u0113\u0114"+
		"\7k\2\2\u0114\u0115\7o\2\2\u0115\u0116\7k\2\2\u0116\u0117\7v\2\2\u0117"+
		"\u0118\3\2\2\2\u0118\u011b\5]/\2\u0119\u011a\7.\2\2\u011a\u011c\5]/\2"+
		"\u011b\u0119\3\2\2\2\u011b\u011c\3\2\2\2\u011c\"\3\2\2\2\u011d\u011e\7"+
		"v\2\2\u011e\u0122\7u\2\2\u011f\u0120\7V\2\2\u0120\u0122\7U\2\2\u0121\u011d"+
		"\3\2\2\2\u0121\u011f\3\2\2\2\u0122$\3\2\2\2\u0123\u0124\7u\2\2\u0124\u0125"+
		"\7v\2\2\u0125\u0126\7c\2\2\u0126\u0127\7t\2\2\u0127\u0128\7v\2\2\u0128"+
		"\u0129\7V\2\2\u0129\u0132\7U\2\2\u012a\u012b\7U\2\2\u012b\u012c\7V\2\2"+
		"\u012c\u012d\7C\2\2\u012d\u012e\7T\2\2\u012e\u012f\7V\2\2\u012f\u0130"+
		"\7V\2\2\u0130\u0132\7U\2\2\u0131\u0123\3\2\2\2\u0131\u012a\3\2\2\2\u0132"+
		"&\3\2\2\2\u0133\u0134\7g\2\2\u0134\u0135\7p\2\2\u0135\u0136\7f\2\2\u0136"+
		"\u0137\7V\2\2\u0137\u013e\7U\2\2\u0138\u0139\7G\2\2\u0139\u013a\7P\2\2"+
		"\u013a\u013b\7F\2\2\u013b\u013c\7V\2\2\u013c\u013e\7U\2\2\u013d\u0133"+
		"\3\2\2\2\u013d\u0138\3\2\2\2\u013e(\3\2\2\2\u013f\u0140\7k\2\2\u0140\u0144"+
		"\7u\2\2\u0141\u0142\7K\2\2\u0142\u0144\7U\2\2\u0143\u013f\3\2\2\2\u0143"+
		"\u0141\3\2\2\2\u0144*\3\2\2\2\u0145\u0146\7p\2\2\u0146\u0147\7w\2\2\u0147"+
		"\u0148\7n\2\2\u0148\u014e\7n\2\2\u0149\u014a\7P\2\2\u014a\u014b\7W\2\2"+
		"\u014b\u014c\7N\2\2\u014c\u014e\7N\2\2\u014d\u0145\3\2\2\2\u014d\u0149"+
		"\3\2\2\2\u014e,\3\2\2\2\u014f\u0150\7p\2\2\u0150\u0151\7q\2\2\u0151\u0156"+
		"\7v\2\2\u0152\u0153\7P\2\2\u0153\u0154\7Q\2\2\u0154\u0156\7V\2\2\u0155"+
		"\u014f\3\2\2\2\u0155\u0152\3\2\2\2\u0156.\3\2\2\2\u0157\u0158\7c\2\2\u0158"+
		"\u0159\7p\2\2\u0159\u015e\7f\2\2\u015a\u015b\7C\2\2\u015b\u015c\7P\2\2"+
		"\u015c\u015e\7F\2\2\u015d\u0157\3\2\2\2\u015d\u015a\3\2\2\2\u015e\60\3"+
		"\2\2\2\u015f\u0160\7q\2\2\u0160\u0164\7t\2\2\u0161\u0162\7Q\2\2\u0162"+
		"\u0164\7T\2\2\u0163\u015f\3\2\2\2\u0163\u0161\3\2\2\2\u0164\62\3\2\2\2"+
		"\u0165\u0166\7?\2\2\u0166\64\3\2\2\2\u0167\u0168\7n\2\2\u0168\u0169\7"+
		"g\2\2\u0169\u016a\7u\2\2\u016a\u016b\7u\2\2\u016b\u016c\7g\2\2\u016c\u016d"+
		"\7s\2\2\u016d\u016e\7w\2\2\u016e\u016f\7c\2\2\u016f\u0170\7n\2\2\u0170"+
		"\66\3\2\2\2\u0171\u0172\7n\2\2\u0172\u0173\7g\2\2\u0173\u0174\7u\2\2\u0174"+
		"\u0175\7u\2\2\u01758\3\2\2\2\u0176\u0177\7i\2\2\u0177\u0178\7t\2\2\u0178"+
		"\u0179\7g\2\2\u0179\u017a\7c\2\2\u017a\u017b\7v\2\2\u017b\u017c\7g\2\2"+
		"\u017c\u017d\7t\2\2\u017d\u017e\7g\2\2\u017e\u017f\7s\2\2\u017f\u0180"+
		"\7w\2\2\u0180\u0181\7c\2\2\u0181\u0182\7n\2\2\u0182:\3\2\2\2\u0183\u0184"+
		"\7i\2\2\u0184\u0185\7t\2\2\u0185\u0186\7g\2\2\u0186\u0187\7c\2\2\u0187"+
		"\u0188\7v\2\2\u0188\u0189\7g\2\2\u0189\u018a\7t\2\2\u018a<\3\2\2\2\u018b"+
		"\u018c\7p\2\2\u018c\u018d\7q\2\2\u018d\u018e\7v\2\2\u018e\u018f\7g\2\2"+
		"\u018f\u0190\7s\2\2\u0190\u0191\7w\2\2\u0191\u0192\7c\2\2\u0192\u0193"+
		"\7n\2\2\u0193>\3\2\2\2\u0194\u0195\7g\2\2\u0195\u0196\7s\2\2\u0196\u0197"+
		"\7w\2\2\u0197\u0198\7c\2\2\u0198\u0199\7n\2\2\u0199@\3\2\2\2\u019a\u019b"+
		"\7p\2\2\u019b\u019c\7q\2\2\u019c\u019d\7v\2\2\u019d\u019e\7o\2\2\u019e"+
		"\u019f\7c\2\2\u019f\u01a0\7v\2\2\u01a0\u01a1\7e\2\2\u01a1\u01a2\7j\2\2"+
		"\u01a2B\3\2\2\2\u01a3\u01a4\7o\2\2\u01a4\u01a5\7c\2\2\u01a5\u01a6\7v\2"+
		"\2\u01a6\u01a7\7e\2\2\u01a7\u01a8\7j\2\2\u01a8D\3\2\2\2\u01a9\u01aa\7"+
		"k\2\2\u01aa\u01ab\7p\2\2\u01abF\3\2\2\2\u01ac\u01ad\7p\2\2\u01ad\u01ae"+
		"\7q\2\2\u01ae\u01af\7v\2\2\u01af\u01b0\7k\2\2\u01b0\u01b1\7p\2\2\u01b1"+
		"H\3\2\2\2\u01b2\u01b3\7d\2\2\u01b3\u01b4\7g\2\2\u01b4\u01b5\7v\2\2\u01b5"+
		"\u01b6\7y\2\2\u01b6\u01b7\7g\2\2\u01b7\u01b8\7g\2\2\u01b8\u01b9\7p\2\2"+
		"\u01b9J\3\2\2\2\u01ba\u01bb\7p\2\2\u01bb\u01bc\7q\2\2\u01bc\u01bd\7v\2"+
		"\2\u01bd\u01be\7d\2\2\u01be\u01bf\7g\2\2\u01bf\u01c0\7v\2\2\u01c0\u01c1"+
		"\7y\2\2\u01c1\u01c2\7g\2\2\u01c2\u01c3\7g\2\2\u01c3\u01c4\7p\2\2\u01c4"+
		"L\3\2\2\2\u01c5\u01c6\7k\2\2\u01c6\u01c7\7u\2\2\u01c7\u01c8\7p\2\2\u01c8"+
		"\u01c9\7w\2\2\u01c9\u01ca\7n\2\2\u01ca\u01cb\7n\2\2\u01cbN\3\2\2\2\u01cc"+
		"\u01cd\7k\2\2\u01cd\u01ce\7u\2\2\u01ce\u01cf\7p\2\2\u01cf\u01d0\7q\2\2"+
		"\u01d0\u01d1\7v\2\2\u01d1\u01d2\7p\2\2\u01d2\u01d3\7w\2\2\u01d3\u01d4"+
		"\7n\2\2\u01d4\u01d5\7n\2\2\u01d5P\3\2\2\2\u01d6\u01d7\7k\2\2\u01d7\u01d8"+
		"\7u\2\2\u01d8\u01d9\7o\2\2\u01d9\u01da\7k\2\2\u01da\u01db\7u\2\2\u01db"+
		"\u01dc\7u\2\2\u01dc\u01dd\7k\2\2\u01dd\u01de\7p\2\2\u01de\u01df\7i\2\2"+
		"\u01dfR\3\2\2\2\u01e0\u01e1\7k\2\2\u01e1\u01e2\7u\2\2\u01e2\u01e3\7p\2"+
		"\2\u01e3\u01e4\7q\2\2\u01e4\u01e5\7v\2\2\u01e5\u01e6\7o\2\2\u01e6\u01e7"+
		"\7k\2\2\u01e7\u01e8\7u\2\2\u01e8\u01e9\7u\2\2\u01e9\u01ea\7k\2\2\u01ea"+
		"\u01eb\7p\2\2\u01eb\u01ec\7i\2\2\u01ecT\3\2\2\2\u01ed\u01ee\7$\2\2\u01ee"+
		"V\3\2\2\2\u01ef\u01f0\7)\2\2\u01f0X\3\2\2\2\u01f1\u01f2\7a\2\2\u01f2Z"+
		"\3\2\2\2\u01f3\u01f4\7\60\2\2\u01f4\\\3\2\2\2\u01f5\u01f7\t\2\2\2\u01f6"+
		"\u01f5\3\2\2\2\u01f7\u01f8\3\2\2\2\u01f8\u01f6\3\2\2\2\u01f8\u01f9\3\2"+
		"\2\2\u01f9\u01fd\3\2\2\2\u01fa\u01fc\t\3\2\2\u01fb\u01fa\3\2\2\2\u01fc"+
		"\u01ff\3\2\2\2\u01fd\u01fb\3\2\2\2\u01fd\u01fe\3\2\2\2\u01fe^\3\2\2\2"+
		"\u01ff\u01fd\3\2\2\2\u0200\u0202\t\3\2\2\u0201\u0200\3\2\2\2\u0202\u0203"+
		"\3\2\2\2\u0203\u0201\3\2\2\2\u0203\u0204\3\2\2\2\u0204`\3\2\2\2\u0205"+
		"\u0206\5g\64\2\u0206b\3\2\2\2\u0207\u020c\5U+\2\u0208\u020b\5q9\2\u0209"+
		"\u020b\13\2\2\2\u020a\u0208\3\2\2\2\u020a\u0209\3\2\2\2\u020b\u020e\3"+
		"\2\2\2\u020c\u020d\3\2\2\2\u020c\u020a\3\2\2\2\u020d\u020f\3\2\2\2\u020e"+
		"\u020c\3\2\2\2\u020f\u0210\5U+\2\u0210d\3\2\2\2\u0211\u0212\7$\2\2\u0212"+
		"\u0213\7$\2\2\u0213f\3\2\2\2\u0214\u0218\5m\67\2\u0215\u0217\5i\65\2\u0216"+
		"\u0215\3\2\2\2\u0217\u021a\3\2\2\2\u0218\u0216\3\2\2\2\u0218\u0219\3\2"+
		"\2\2\u0219h\3\2\2\2\u021a\u0218\3\2\2\2\u021b\u021e\5m\67\2\u021c\u021e"+
		"\5o8\2\u021d\u021b\3\2\2\2\u021d\u021c\3\2\2\2\u021ej\3\2\2\2\u021f\u0222"+
		"\5u;\2\u0220\u0222\5w<\2\u0221\u021f\3\2\2\2\u0221\u0220\3\2\2\2\u0222"+
		"l\3\2\2\2\u0223\u0226\5Y-\2\u0224\u0226\5k\66\2\u0225\u0223\3\2\2\2\u0225"+
		"\u0224\3\2\2\2\u0226n\3\2\2\2\u0227\u022b\5k\66\2\u0228\u022b\5s:\2\u0229"+
		"\u022b\5Y-\2\u022a\u0227\3\2\2\2\u022a\u0228\3\2\2\2\u022a\u0229\3\2\2"+
		"\2\u022bp\3\2\2\2\u022c\u022d\7^\2\2\u022d\u0231\7$\2\2\u022e\u022f\7"+
		"^\2\2\u022f\u0231\7^\2\2\u0230\u022c\3\2\2\2\u0230\u022e\3\2\2\2\u0231"+
		"r\3\2\2\2\u0232\u0233\t\3\2\2\u0233t\3\2\2\2\u0234\u0235\t\4\2\2\u0235"+
		"v\3\2\2\2\u0236\u0237\t\5\2\2\u0237x\3\2\2\2\u0238\u0239\5{>\2\u0239z"+
		"\3\2\2\2\u023a\u023d\5}?\2\u023b\u023d\5e\63\2\u023c\u023a\3\2\2\2\u023c"+
		"\u023b\3\2\2\2\u023d|\3\2\2\2\u023e\u023f\5\177@\2\u023f~\3\2\2\2\u0240"+
		"\u0243\5\u0081A\2\u0241\u0243\4\u00a2\1\2\u0242\u0240\3\2\2\2\u0242\u0241"+
		"\3\2\2\2\u0243\u0080\3\2\2\2\u0244\u0245\t\6\2\2\u0245\u0082\3\2\2\2\u0246"+
		"\u0247\t\7\2\2\u0247\u0084\3\2\2\2\u0248\u024a\t\b\2\2\u0249\u0248\3\2"+
		"\2\2\u024a\u024b\3\2\2\2\u024b\u0249\3\2\2\2\u024b\u024c\3\2\2\2\u024c"+
		"\u024d\3\2\2\2\u024d\u024e\bC\2\2\u024e\u0086\3\2\2\2#\2\u0097\u00a5\u00b3"+
		"\u00bd\u00c9\u00d7\u00e5\u00f7\u0105\u011b\u0121\u0131\u013d\u0143\u014d"+
		"\u0155\u015d\u0163\u01f8\u01fd\u0203\u020a\u020c\u0218\u021d\u0221\u0225"+
		"\u022a\u0230\u023c\u0242\u024b\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}